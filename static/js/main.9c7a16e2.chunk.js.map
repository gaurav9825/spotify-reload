{"version":3,"sources":["reducers/user.js","reducers/token.js","reducers/playlist.js","reducers/songs.js","reducers/albums.js","reducers/artists.js","reducers/ui.js","reducers/browse.js","reducers/sound.js","reducers/index.js","actions/user.js","actions/artist.js","actions/song.js","components/user/component.js","components/user/index.js","components/search/component.js","components/search/index.js","components/common/header/index.js","components/songscontrol/component.js","components/songscontrol/index.js","components/volumecontrols/component.js","actions/sound.js","components/volumecontrols/index.js","components/common/footer/index.js","components/playlists/component.js","actions/playlist.js","actions/ui.js","components/playlists/index.js","components/songslist/component.js","components/songslist/index.js","components/albums/component.js","components/albums/index.js","components/artists/component.js","components/artists/index.js","components/view/component.js","components/view/index.js","components/header/component.js","actions/browse.js","components/header/index.js","components/sidebar/component.js","actions/album.js","components/sidebar/index.js","App.js","actions/token.js","AuthRoute.js","serviceWorker.js","index.js"],"names":["user","state","arguments","length","undefined","action","type","Object","objectSpread","fetchUserError","songAddedToLibrary","songId","token","playlist","fetchPlaylistPending","playlistMenu","playlists","fetchPlaylistError","toConsumableArray","concat","defaultState","fetchSongsPending","songPlaying","timeElapsed","viewType","songPaused","songs","view","fetchSongsError","searchSongsPending","searchSongsError","fetchPlaylistSongsPending","fetchPlaylistSongsError","fetchArtistSongsPending","fetchArtistSongsError","songDetails","song","id","time","albums","fetchAlbumsPending","fetchAlbumsError","artistIds","artists","fetchArtistsPending","artistList","fetchArtistsError","title","ui","browse","categories","items","fetchCategoriesError","newReleases","fetchNewReleasesError","featured","fetchFeaturedError","sound","volume","combineReducers","fetchUser","accessToken","dispatch","request","Request","headers","Headers","Authorization","fetch","then","res","statusText","window","location","href","json","catch","err","addSongToLibrary","method","ok","fetchArtists","fetchArtistSongs","artistId","tracks","map","item","track","fetchSongs","uniqBy","name","join","setArtistIds","searchSongs","searchTerm","Accept","fetchRecentlyPlayed","playSong","stopSong","pauseSong","resumeSong","increaseSongTime","updateViewType","UserDetails","_ref","userImage","displayName","react_default","a","createElement","className","alt","src","connect","display_name","images","url","TrackSearch","updateSearchTerm","e","_this","setState","target","value","_this2","this","onSubmit","props","onChange","placeholder","onClick","preventDefault","aria-hidden","Component","bindActionCreators","Header","components_search","src_components_user","SongControls","getSongIndex","_this$props","index","filter","nextSong","_this$props2","audioControl","currentIndex","prevSong","_this$props3","nextProps","clearInterval","intervalId","calculateTime","setInterval","showPlay","songName","artistName","moment","minutes","second","format","style","width","VolumeControls","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateVolume","Math","ceil","min","max","Footer","components_songscontrol","components_volumecontrols","UserPlaylists","userId","fetchPlaylistsMenu","fetchPlaylistSongs","owner","updateHeaderTitle","key","renderPlaylists","playlistId","SongList","ms","floor","seconds","toFixed","i","buttonClass","songAddedId","album","added_at","msToMinutesAndSeconds","duration_ms","renderSongs","AlbumList","ArtistList","artist","artistSongsAction","MainView","headerTitle","src_components_albums","src_components_artists","components_view","components_songslist","MainHeader","currentPlaylist","currentArtist","fetchCategories","fetchNewReleases","fetchFeatured","total","SideMenu","fetchAlbums","getArtists","App","audio","pause","play","Audio","preview_url","components_sidebar","src_components_playlists","common_header","src_components_header","common_footer","setToken","AuthenticatedRoute","isAuthenticated","params","reg","hash","substring","exec","decodeURIComponent","access_token","C","component","cProps","rest","objectWithoutProperties","Route","assign","render","React","PureComponent","Boolean","hostname","match","Index","BrowserRouter","Switch","AuthRoute","path","exact","store","createStore","reducers","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","ReactDOM","es","src_Index","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9c7a16e2.chunk.js","sourcesContent":["export const user = (state = {}, action) => {\n  switch (action.type) {\n    case 'FETCH_USER_SUCCESS':\n      return {\n        ...state,\n        user: action.user,\n        fetchUserError: false\n      }\n\n    case 'FETCH_USER_ERROR':\n      return {\n        ...state,\n        fetchUserError: true\n      }\n\n    case 'ADD_SONG_TO_LIBRARY_SUCCESS':\n      return {\n        ...state,\n        songAddedToLibrary: true,\n        songId: action.songId\n      }\n\n    case 'ADD_SONG_TO_LIBRARY_ERROR':\n      return {\n        ...state,\n        songAddedToLibrary: false\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default user\n","export const token = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_TOKEN':\n      return {\n        ...state,\n        token: action.token\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default token\n","export const playlist = (state = {}, action) => {\n  switch (action.type) {\n    case 'FETCH_PLAYLIST_MENU_PENDING':\n      return {\n        fetchPlaylistPending: true,\n        ...state\n      }\n\n    case 'FETCH_PLAYLIST_MENU_SUCCESS':\n      return {\n        playlistMenu: action.playlists,\n        playlists: action.playlists,\n        fetchPlaylistError: false,\n        fetchPlaylistPending: false,\n        ...state\n      }\n\n    case 'ADD_PLAYLIST_ITEM':\n      return {\n        ...state,\n        playlists: [...state.playlists, action.playlist]\n      }\n\n    case 'FETCH_PLAYLIST_MENU_ERROR':\n      return {\n        fetchPlaylistError: true,\n        fetchPlaylistPending: false,\n        ...state\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default playlist\n","const defaultState = {\n  fetchSongsPending: true,\n  songPlaying: false,\n  timeElapsed: 0,\n  songId: 0,\n  viewType: 'songs',\n  songPaused: true\n}\n\nexport const songs = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'UPDATE_VIEW_TYPE':\n      return {\n        ...state,\n        viewType: action.view\n      }\n\n    case 'FETCH_SONGS_PENDING':\n      return {\n        ...state,\n        fetchSongsPending: true\n      }\n\n    case 'FETCH_SONGS_SUCCESS':\n      return {\n        ...state,\n        songs: action.songs,\n        fetchSongsError: false,\n        fetchSongsPending: false,\n        viewType: 'songs'\n      }\n\n    case 'FETCH_SONGS_ERROR':\n      return {\n        ...state,\n        fetchSongsError: true,\n        fetchSongsPending: false\n      }\n\n    case 'SEARCH_SONGS_PENDING':\n      return {\n        ...state,\n        searchSongsPending: true\n      }\n\n    case 'SEARCH_SONGS_SUCCESS':\n      return {\n        ...state,\n        songs: action.songs,\n        searchSongsError: false,\n        searchSongsPending: false,\n        viewType: 'search'\n      }\n\n    case 'SEARCH_SONGS_ERROR':\n      return {\n        ...state,\n        searchSongsError: true,\n        searchSongsPending: false\n      }\n\n    case 'FETCH_RECENTLY_PLAYED_PENDING':\n      return {\n        ...state,\n        fetchSongsPending: true\n      }\n\n    case 'FETCH_RECENTLY_PLAYED_SUCCESS':\n      return {\n        ...state,\n        songs: action.songs,\n        viewType: 'Recently Played',\n        fetchSongsError: false,\n        fetchSongsPending: false\n      }\n\n    case 'FETCH_RECENTLY_PLAYED_ERROR':\n      return {\n        ...state,\n        fetchSongsError: true,\n        fetchSongsPending: false\n      }\n\n    case 'FETCH_PLAYLIST_SONGS_PENDING':\n      return {\n        ...state,\n        fetchPlaylistSongsPending: true\n      }\n\n    case 'FETCH_PLAYLIST_SONGS_SUCCESS':\n      return {\n        ...state,\n        songs: action.songs,\n        viewType: 'playlist',\n        fetchPlaylistSongsError: false,\n        fetchPlaylistSongsPending: false\n      }\n\n    case 'FETCH_PLAYLIST_SONGS_ERROR':\n      return {\n        ...state,\n        fetchPlaylistSongsError: true,\n        fetchPlaylistSongsPending: false\n      }\n\n    case 'FETCH_ARTIST_SONGS_PENDING':\n      return {\n        ...state,\n        fetchArtistSongsPending: true\n      }\n\n    case 'FETCH_ARTIST_SONGS_SUCCESS':\n      return {\n        ...state,\n        songs: action.songs,\n        viewType: 'Artist',\n        fetchArtistSongsError: false,\n        fetchArtistSongsPending: false\n      }\n\n    case 'FETCH_ARTIST_SONGS_ERROR':\n      return {\n        ...state,\n        fetchArtistSongsError: true,\n        fetchArtistSongsPending: false\n      }\n\n    case 'PLAY_SONG':\n      return {\n        ...state,\n        songPlaying: true,\n        songDetails: action.song,\n        songId: action.song.id,\n        timeElapsed: 0,\n        songPaused: false\n      }\n\n    case 'STOP_SONG':\n      return {\n        ...state,\n        songPlaying: false,\n        songDetails: null,\n        timeElapsed: 0,\n        songPaused: true\n      }\n\n    case 'PAUSE_SONG':\n      return {\n        ...state,\n        songPaused: true\n      }\n\n    case 'RESUME_SONG':\n      return {\n        ...state,\n        songPaused: false\n      }\n\n    case 'INCREASE_SONG_TIME':\n      return {\n        ...state,\n        timeElapsed: action.time\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default songs\n","export const albums = (state = {}, action) => {\n  switch (action.type) {\n    case 'FETCH_ALBUMS_PENDING':\n      return {\n        ...state,\n        fetchAlbumsPending: true\n      }\n\n    case 'FETCH_ALBUMS_SUCCESS':\n      return {\n        ...state,\n        albums: action.albums,\n        fetchAlbumsError: false,\n        fetchAlbumsPending: false\n      }\n\n    case 'FETCH_ALBUMS_ERROR':\n      return {\n        ...state,\n        fetchAlbumsError: true,\n        fetchAlbumsPending: false\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default albums\n","const defaultState = {\n  artistIds: ''\n}\n\nexport const artists = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SET_ARTIST_IDS':\n      return {\n        ...state,\n        artistIds: action.artistIds\n      }\n\n    case 'FETCH_ARTISTS_PENDING':\n      return {\n        ...state,\n        fetchArtistsPending: true\n      }\n\n    case 'FETCH_ARTISTS_SUCCESS':\n      return {\n        ...state,\n        artistList: action.artists,\n        fetchArtistsError: false,\n        fetchArtistsPending: false\n      }\n\n    case 'FETCH_ARTISTS_ERROR':\n      return {\n        ...state,\n        fetchArtistsError: true,\n        fetchArtistsPending: false\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default artists\n","const defaultState = {\n  title: 'Songs'\n}\n\nexport const ui = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'UPDATE_HEADER_TITLE':\n      return {\n        ...state,\n        title: action.title\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default ui\n","export const browse = (state = {}, action) => {\n  switch (action.type) {\n    case 'FETCH_CATEGORIES_SUCCESS':\n      return {\n        ...state,\n        view: action.categories.items,\n        fetchCategoriesError: false\n      }\n\n    case 'FETCH_CATEGORIES_ERROR':\n      return {\n        ...state,\n        fetchCategoriesError: true\n      }\n\n    case 'FETCH_NEW_RELEASES_SUCCESS':\n      return {\n        ...state,\n        view: action.newReleases.items,\n        fetchNewReleasesError: false\n      }\n\n    case 'FETCH_NEW_RELEASES_ERROR':\n      return {\n        ...state,\n        fetchNewReleasesError: true\n      }\n\n    case 'FETCH_FEATURED_SUCCESS':\n      return {\n        ...state,\n        view: action.featured.items,\n        fetchFeaturedError: false\n      }\n\n    case 'FETCH_FEATURED_ERROR':\n      return {\n        ...state,\n        fetchFeaturedError: true\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default browse\n","export const sound = (state = { volume: 100 }, action) => {\n  switch (action.type) {\n    case 'UPDATE_VOLUME':\n      return {\n        volume: action.volume\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default sound\n","import { combineReducers } from 'redux'\nimport user from './user'\nimport token from './token'\nimport playlist from './playlist'\nimport songs from './songs'\nimport albums from './albums'\nimport artists from './artists'\nimport ui from './ui'\nimport browse from './browse'\nimport sound from './sound'\n\nexport default combineReducers({\n  user,\n  token,\n  playlist,\n  songs,\n  albums,\n  artists,\n  ui,\n  browse,\n  sound\n})\n","export const fetchUserSuccess = (user) => {\n  return {\n    type: 'FETCH_USER_SUCCESS',\n    user\n  };\n};\n\nexport const fetchUserError = () => {\n  return {\n    type: 'FETCH_USER_ERROR'\n  };\n};\n\nexport const fetchUser = (accessToken) => {\n\n  return dispatch => {\n    const request = new Request('https://api.spotify.com/v1/me', {\n      headers: new Headers({\n        'Authorization': 'Bearer ' + accessToken\n      })\n    });\n\n    fetch(request).then(res => {\n      // send user back to homepage if no token\n      if(res.statusText === \"Unauthorized\") {\n        window.location.href = './';\n      }\n      return res.json();\n    }).then(res => {\n      dispatch(fetchUserSuccess(res));\n    }).catch(err => {\n      dispatch(fetchUserError(err));\n    });\n  };\n};\n\nexport const addSongToLibrarySuccess = (songId) => {\n  return {\n    type: 'ADD_SONG_TO_LIBRARY_SUCCESS',\n    songId\n  };\n};\n\nexport const addSongToLibraryError = () => {\n  return {\n    type: 'ADD_SONG_TO_LIBRARY_ERROR'\n  };\n};\n\nexport const addSongToLibrary = (accessToken, id) => {\n\n  return dispatch => {\n\n    const request = new Request(`https://api.spotify.com/v1/me/tracks?ids=${id}`, {\n      method: 'PUT',\n      headers: new Headers({\n        'Authorization': 'Bearer ' + accessToken\n      })\n    });\n\n    fetch(request).then(res => {\n      if(res.ok) {\n        dispatch(addSongToLibrarySuccess(id));\n      }\n    }).catch(err => {\n      dispatch(addSongToLibraryError(err));\n    });\n  };\n};\n","export const fetchArtistsPending = () => {\n  return {\n    type: 'FETCH_ARTISTS_PENDING'\n  };\n};\n\nexport const fetchArtistsSuccess = (artists) => {\n  return {\n    type: 'FETCH_ARTISTS_SUCCESS',\n    artists\n  };\n};\n\nexport const fetchArtistsError = () => {\n  return {\n    type: 'FETCH_ARTISTS_ERROR'\n  };\n};\n\nexport const fetchArtists = (accessToken, artistIds) => {\n  return dispatch => {\n    const request = new Request(`https://api.spotify.com/v1/artists?ids=${artistIds}`, {\n      headers: new Headers({\n        'Authorization': 'Bearer ' + accessToken\n      })\n    });\n\n    dispatch(fetchArtistsPending());\n\n    fetch(request).then(res => {\n      return res.json();\n    }).then(res => {\n      dispatch(fetchArtistsSuccess(res));\n    }).catch(err => {\n      dispatch(fetchArtistsError(err));\n    });\n  };\n};\n\n\nexport const fetchArtistSongsPending = () => {\n  return {\n    type: 'FETCH_ARTIST_SONGS_PENDING'\n  };\n};\n\nexport const fetchArtistSongsSuccess = (songs) => {\n  return {\n    type: 'FETCH_ARTIST_SONGS_SUCCESS',\n    songs\n  };\n};\n\nexport const fetchArtistSongsError = () => {\n  return {\n    type: 'FETCH_ARTIST_SONGS_ERROR'\n  };\n};\n\nexport const fetchArtistSongs = (artistId, accessToken) => {\n  return dispatch => {\n    const request = new Request(`https://api.spotify.com/v1/artists/${artistId}/top-tracks?country=US`, {\n      headers: new Headers({\n        'Authorization': 'Bearer ' + accessToken\n      })\n    });\n\n    dispatch(fetchArtistSongsPending());\n\n    fetch(request).then(res => {\n      if(res.statusText === \"Unauthorized\") {\n        window.location.href = './';\n      }\n      return res.json();\n    }).then(res => {\n      // map the response to match that returned from get song request\n      res.items = res.tracks.map(item => {\n        return {\n          track: item\n        };\n      });\n\n      dispatch(fetchArtistSongsSuccess(res.items));\n    }).catch(err => {\n      dispatch(fetchArtistSongsError(err));\n    });\n  };\n};\n\n\nexport const setArtistIds = (artistIds) => {\n  return {\n    type: 'SET_ARTIST_IDS',\n    artistIds\n  };\n};\n","import uniqBy from 'lodash/uniqBy'\nimport { setArtistIds } from './artist'\n\nexport const fetchSongsPending = () => {\n  return {\n    type: 'FETCH_SONGS_PENDING'\n  }\n}\n\nexport const fetchSongsSuccess = songs => {\n  return {\n    type: 'FETCH_SONGS_SUCCESS',\n    songs\n  }\n}\n\nexport const fetchSongsError = () => {\n  return {\n    type: 'FETCH_SONGS_ERROR'\n  }\n}\n\nexport const fetchSongs = accessToken => {\n  return dispatch => {\n    const request = new Request(\n      `https://api.spotify.com/v1/me/tracks?limit=50`,\n      {\n        headers: new Headers({\n          Authorization: 'Bearer ' + accessToken\n        })\n      }\n    )\n\n    dispatch(fetchSongsPending())\n\n    fetch(request)\n      .then(res => {\n        if (res.statusText === 'Unauthorized') {\n          window.location.href = './'\n        }\n        return res.json()\n      })\n      .then(res => {\n        // get all artist ids and remove duplicates\n        let artistIds = uniqBy(res.items, item => {\n          return item.track.artists[0].name\n        })\n          .map(item => {\n            return item.track.artists[0].id\n          })\n          .join(',')\n\n        dispatch(setArtistIds(artistIds)())\n\n        dispatch(fetchSongsSuccess(res.items))\n      })\n      .catch(err => {\n        dispatch(fetchSongsError(err))\n      })\n  }\n}\n\nexport const searchSongsPending = () => {\n  return {\n    type: 'SEARCH_SONGS_PENDING'\n  }\n}\n\nexport const searchSongsSuccess = songs => {\n  return {\n    type: 'SEARCH_SONGS_SUCCESS',\n    songs\n  }\n}\n\nexport const searchSongsError = () => {\n  return {\n    type: 'SEARCH_SONGS_ERROR'\n  }\n}\n\nexport const searchSongs = (searchTerm, accessToken) => {\n  return dispatch => {\n    const request = new Request(\n      `https://api.spotify.com/v1/search?q=${searchTerm}&type=track`,\n      {\n        headers: new Headers({\n          Authorization: 'Bearer ' + accessToken,\n          Accept: 'application/json'\n        })\n      }\n    )\n\n    dispatch(searchSongsPending())\n\n    fetch(request)\n      .then(res => {\n        if (res.statusText === 'Unauthorized') {\n          window.location.href = './'\n        }\n        return res.json()\n      })\n      .then(res => {\n        res.items = res.tracks.items.map(item => {\n          return {\n            track: item\n          }\n        })\n        dispatch(searchSongsSuccess(res.items))\n      })\n      .catch(err => {\n        dispatch(fetchSongsError(err))\n      })\n  }\n}\n\nexport const fetchRecentlyPlayedPending = () => {\n  return {\n    type: 'FETCH_RECENTLY_PLAYED_PENDING'\n  }\n}\n\nexport const fetchRecentlyPlayedSuccess = songs => {\n  return {\n    type: 'FETCH_RECENTLY_PLAYED_SUCCESS',\n    songs\n  }\n}\n\nexport const fetchRecentlyPlayedError = () => {\n  return {\n    type: 'FETCH_RECENTLY_PLAYED_ERROR'\n  }\n}\n\nexport const fetchRecentlyPlayed = accessToken => {\n  return dispatch => {\n    const request = new Request(\n      `https://api.spotify.com/v1/me/player/recently-played`,\n      {\n        headers: new Headers({\n          Authorization: 'Bearer ' + accessToken\n        })\n      }\n    )\n\n    dispatch(fetchRecentlyPlayedPending())\n\n    fetch(request)\n      .then(res => {\n        return res.json()\n      })\n      .then(res => {\n        // remove duplicates from recently played\n        res.items = uniqBy(res.items, item => {\n          return item.track.id\n        })\n        dispatch(fetchRecentlyPlayedSuccess(res.items))\n      })\n      .catch(err => {\n        dispatch(fetchRecentlyPlayedError(err))\n      })\n  }\n}\n\nexport const playSong = song => {\n  return {\n    type: 'PLAY_SONG',\n    song\n  }\n}\n\nexport const stopSong = () => {\n  return {\n    type: 'STOP_SONG'\n  }\n}\n\nexport const pauseSong = () => {\n  return {\n    type: 'PAUSE_SONG'\n  }\n}\n\nexport const resumeSong = () => {\n  return {\n    type: 'RESUME_SONG'\n  }\n}\n\nexport const increaseSongTime = time => {\n  return {\n    type: 'INCREASE_SONG_TIME',\n    time\n  }\n}\n\nexport const updateViewType = view => {\n  return {\n    type: 'UPDATE_VIEW_TYPE',\n    view\n  }\n}\n","import React from 'react'\n\nimport './index.css'\n\nconst UserDetails = ({ userImage, displayName }) => {\n  return (\n    <div className='user-details-container'>\n      <img alt='user' className='user-image' src={userImage} />\n      <p className='user-name'>{displayName}</p>\n    </div>\n  )\n}\n\nexport default UserDetails\n","import UserDetails from './component'\nimport { connect } from 'react-redux'\n\nconst mapStateToProps = state => {\n  return {\n    displayName: state.user.user ? state.user.user.display_name : '',\n    userImage: state.user.user && state.user.user.images[0]\n      ? state.user.user.images[0].url\n      : ''\n  }\n}\n\nexport default connect(mapStateToProps)(UserDetails)\n","import React, { Component } from 'react'\n\nimport './index.css'\n\nclass TrackSearch extends Component {\n  state = {\n    searchTerm: ''\n  }\n\n  updateSearchTerm = e => {\n    this.setState({\n      searchTerm: e.target.value\n    })\n  }\n\n  render () {\n    return (\n      <div className='track-search-container'>\n        <form\n          onSubmit={() => {\n            this.props.searchSongs(this.state.searchTerm, this.props.token)\n          }}\n        >\n          <input\n            onChange={this.updateSearchTerm}\n            type='text'\n            placeholder='Search...'\n          />\n          <button\n            onClick={e => {\n              e.preventDefault()\n              this.props.searchSongs(this.state.searchTerm, this.props.token)\n            }}\n          >\n            <i className='fa fa-search search' aria-hidden='true' />\n          </button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default TrackSearch\n","import TrackSearch from './component'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { searchSongs } from '../../actions/song'\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token.token\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      searchSongs\n    },\n    dispatch\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TrackSearch)\n","import React from 'react'\n\nimport UserDetails from '../../user'\nimport TrackSearch from '../../search'\nimport './index.css'\n\nconst Header = () => {\n  return (\n    <div className='header'>\n      <TrackSearch />\n      <UserDetails />\n    </div>\n  )\n}\n\nexport default Header\n","import React, { Component } from 'react'\n\nimport moment from 'moment'\nimport './index.css'\n\nclass SongControls extends Component {\n  state = {\n    timeElapsed: this.props.timeElapsed\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (!nextProps.songPlaying) {\n      clearInterval(this.state.intervalId)\n    }\n\n    if (nextProps.songPlaying && nextProps.timeElapsed === 0) {\n      clearInterval(this.state.intervalId)\n      this.calculateTime()\n    }\n\n    this.setState({\n      timeElapsed: nextProps.timeElapsed\n    })\n  }\n\n  calculateTime () {\n    const intervalId = setInterval(() => {\n      if (this.state.timeElapsed === 30) {\n        clearInterval(this.state.intervalId)\n        this.props.stopSong()\n      } else if (!this.props.songPaused) {\n        this.props.increaseSongTime(this.state.timeElapsed + 1)\n      }\n    }, 1000)\n\n    this.setState({\n      intervalId: intervalId\n    })\n  }\n\n  getSongIndex = () => {\n    const { songs, songDetails } = this.props\n    const currentIndex = songs\n      .map((song, index) => {\n        if (song.track === songDetails) {\n          return index\n        }\n      })\n      .filter(item => {\n        return item !== undefined\n      })[0]\n\n    return currentIndex\n  }\n\n  nextSong = () => {\n    const { songs, audioControl } = this.props\n    let currentIndex = this.getSongIndex()\n    currentIndex === songs.length - 1\n      ? audioControl(songs[0])\n      : audioControl(songs[currentIndex + 1])\n  }\n\n  prevSong = () => {\n    const { songs, audioControl } = this.props\n    let currentIndex = this.getSongIndex()\n    currentIndex === 0\n      ? audioControl(songs[songs.length - 1])\n      : audioControl(songs[currentIndex - 1])\n  }\n\n  render () {\n    const showPlay = this.props.songPaused\n      ? 'fa fa-play-circle-o play-btn'\n      : 'fa fa-pause-circle-o pause-btn'\n\n    return (\n      <div className='song-player-container'>\n\n        <div className='song-details'>\n          <p className='song-name'>{this.props.songName}</p>\n          <p className='artist-name'>{this.props.artistName}</p>\n        </div>\n\n        <div className='song-controls'>\n\n          <div onClick={this.prevSong} className='reverse-song'>\n            <i className='fa fa-step-backward reverse' aria-hidden='true' />\n          </div>\n\n          <div className='play-btn'>\n            <i\n              onClick={\n                !this.props.songPaused\n                  ? this.props.pauseSong\n                  : this.props.resumeSong\n              }\n              className={'fa play-btn' + showPlay}\n              aria-hidden='true'\n            />\n          </div>\n\n          <div onClick={this.nextSong} className='next-song'>\n            <i className='fa fa-step-forward forward' aria-hidden='true' />\n          </div>\n\n        </div>\n\n        <div className='song-progress-container'>\n          <p className='timer-start'>\n            {moment().minutes(0).second(this.state.timeElapsed).format('m:ss')}\n          </p>\n          <div className='song-progress'>\n            <div\n              style={{ width: this.state.timeElapsed * 16.5 }}\n              className='song-expired'\n            />\n          </div>\n          <p className='timer-end'>\n            {moment()\n              .minutes(0)\n              .second(30 - this.state.timeElapsed)\n              .format('m:ss')}\n          </p>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default SongControls\n","import SongControls from './component'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { increaseSongTime } from '../../actions/song'\n\nconst mapStateToProps = state => {\n  return {\n    songName: state.songs.songDetails ? state.songs.songDetails.name : '',\n    artistName: state.songs.songDetails\n      ? state.songs.songDetails.artists[0].name\n      : '',\n    songPlaying: state.songs.songPlaying,\n    timeElapsed: state.songs.timeElapsed,\n    songPaused: state.songs.songPaused,\n    songDetails: state.songs.songDetails,\n    songs: state.songs.songs\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      increaseSongTime\n    },\n    dispatch\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SongControls)\n","import React, { Component } from 'react'\n\nimport './index.css'\n\nclass VolumeControls extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      volume: props.volume\n    }\n  }\n\n  updateVolume = e => {\n    this.setState({\n      volume: e.target.value\n    })\n\n    this.props.updateVolume(Math.ceil(e.target.value / 10) * 10)\n  }\n\n  render () {\n    return (\n      <div className='volume-container'>\n        <i className='fa fa-volume-up' aria-hidden='true' />\n        <input\n          className='volume'\n          type='range'\n          min={0}\n          max={100}\n          value={this.state.volume}\n          onChange={this.updateVolume}\n        />\n      </div>\n    )\n  }\n}\n\nexport default VolumeControls\n","export const updateVolume = (volume) => {\n  return {\n    type: 'UPDATE_VOLUME',\n    volume\n  };\n};\n","import SongControls from './component'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { updateVolume } from '../../actions/sound'\n\nconst mapStateToProps = state => {\n  return {\n    volume: state.sound.volume\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      updateVolume\n    },\n    dispatch\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SongControls)\n","import React from 'react'\n\nimport SongControls from '../../songscontrol'\nimport VolumeControls from '../../volumecontrols'\nimport './index.css'\n\nconst Footer = ({ stopSong, pauseSong, resumeSong, audioControl }) => {\n  return (\n    <div className='footer'>\n      <SongControls\n        stopSong={stopSong}\n        pauseSong={pauseSong}\n        resumeSong={resumeSong}\n        audioControl={audioControl}\n      />\n      <VolumeControls />\n    </div>\n  )\n}\n\nexport default Footer\n","import React, { Component } from 'react'\n\nimport './index.css'\n\nclass UserPlaylists extends Component {\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.userId !== '' && nextProps.token !== '') {\n      this.props.fetchPlaylistsMenu(nextProps.userId, nextProps.token)\n    }\n  }\n\n  renderPlaylists () {\n    return this.props.playlistMenu.map(playlist => {\n      const getPlaylistSongs = () => {\n        this.props.fetchPlaylistSongs(\n          playlist.owner.id,\n          playlist.id,\n          this.props.token\n        )\n        this.props.updateHeaderTitle(playlist.name)\n      }\n\n      return (\n        <li\n          onClick={getPlaylistSongs}\n          className={\n            this.props.title === playlist.name\n              ? 'active side-menu-item'\n              : 'side-menu-item'\n          }\n          key={playlist.id}\n        >\n          {playlist.name}\n        </li>\n      )\n    })\n  }\n\n  render () {\n    return (\n      <div className='user-playlist-container'>\n        <h3 className='user-playlist-header'>Playlists</h3>\n        {this.props.playlistMenu && this.renderPlaylists()}\n      </div>\n    )\n  }\n}\n\nexport default UserPlaylists\n","import uniqBy from 'lodash/uniqBy';\n\nexport const fetchPlaylistMenuPending = () => {\n  return {\n    type: 'FETCH_PLAYLIST_MENU_PENDING'\n  };\n};\n\nexport const fetchPlaylistMenuSuccess = (playlists) => {\n  return {\n    type: 'FETCH_PLAYLIST_MENU_SUCCESS',\n    playlists\n  };\n};\n\nexport const fetchPlaylistMenuError = () => {\n  return {\n    type: 'FETCH_PLAYLIST_MENU_ERROR'\n  };\n};\n\nexport const addPlaylistItem = (playlist) => {\n  return {\n    type: 'ADD_PLAYLIST_ITEM',\n    playlist\n  };\n};\n\nexport const fetchPlaylistsMenu = (userId, accessToken) => {\n  return dispatch => {\n    const request = new Request(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n      headers: new Headers({\n        'Authorization': 'Bearer ' + accessToken\n      })\n    });\n\n    dispatch(fetchPlaylistMenuPending());\n\n    fetch(request).then(res => {\n      if(res.statusText === \"Unauthorized\") {\n        window.location.href = './';\n      }\n      return res.json();\n    }).then(res => {\n      dispatch(fetchPlaylistMenuSuccess(res.items));\n    }).catch(err => {\n      dispatch(fetchPlaylistMenuError(err));\n    });\n  };\n};\n\n\nexport const fetchPlaylistSongsPending = () => {\n  return {\n    type: 'FETCH_PLAYLIST_SONGS_PENDING'\n  };\n};\n\nexport const fetchPlaylistSongsSuccess = (songs) => {\n  return {\n    type: 'FETCH_PLAYLIST_SONGS_SUCCESS',\n    songs\n  };\n};\n\nexport const fetchPlaylistSongsError = () => {\n  return {\n    type: 'FETCH_PLAYLIST_SONGS_ERROR'\n  };\n};\n\nexport const fetchPlaylistSongs = (userId, playlistId, accessToken) => {\n  return dispatch => {\n    const request = new Request(`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`, {\n      headers: new Headers({\n        'Authorization': 'Bearer ' + accessToken\n      })\n    });\n\n    dispatch(fetchPlaylistSongsPending());\n\n    fetch(request).then(res => {\n      return res.json();\n    }).then(res => {\n      //remove duplicate tracks\n      res.items = uniqBy(res.items, (item) => {\n        return item.track.id;\n      });\n      dispatch(fetchPlaylistSongsSuccess(res.items));\n    }).catch(err => {\n      dispatch(fetchPlaylistSongsError(err));\n    });\n  };\n};\n","export const updateHeaderTitle = (title) => {\n  return {\n    type: 'UPDATE_HEADER_TITLE',\n    title\n  };\n};\n","import UserPlaylists from './component'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { fetchPlaylistsMenu, fetchPlaylistSongs } from '../../actions/playlist'\nimport { updateHeaderTitle } from '../../actions/ui'\n\nconst mapStateToProps = state => {\n  return {\n    userId: state.user.user ? state.user.user.id : '',\n    playlistMenu: state.playlist.playlistMenu\n      ? state.playlist.playlistMenu\n      : '',\n    token: state.token.token ? state.token.token : '',\n    title: state.ui.title\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      fetchPlaylistsMenu,\n      fetchPlaylistSongs,\n      updateHeaderTitle\n    },\n    dispatch\n  )\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPlaylists)\n","import React, { Component } from 'react'\nimport moment from 'moment'\n\nimport './index.css'\n\nclass SongList extends Component {\n  componentWillReceiveProps (nextProps) {\n    if (\n      nextProps.token !== '' &&\n      !nextProps.fetchSongsError &&\n      nextProps.fetchSongsPending &&\n      nextProps.viewType === 'songs'\n    ) {\n      this.props.fetchSongs(nextProps.token)\n    }\n  }\n\n  msToMinutesAndSeconds (ms) {\n    const minutes = Math.floor(ms / 60000)\n    const seconds = (ms % 60000 / 1000).toFixed(0)\n    return minutes + ':' + (seconds < 10 ? '0' : '') + seconds\n  }\n\n  renderSongs () {\n    return this.props.songs.map((song, i) => {\n      const buttonClass = song.track.id === this.props.songId &&\n        !this.props.songPaused\n        ? 'fa-pause-circle-o'\n        : 'fa-play-circle-o'\n\n      return (\n        <li\n          className={\n            song.track.id === this.props.songId\n              ? 'active user-song-item'\n              : 'user-song-item'\n          }\n          key={i}\n        >\n          <div\n            onClick={() => {\n              song.track.id === this.props.songId &&\n                this.props.songPlaying &&\n                this.props.songPaused\n                ? this.props.resumeSong()\n                : this.props.songPlaying &&\n                    !this.props.songPaused &&\n                    song.track.id === this.props.songId\n                    ? this.props.pauseSong()\n                    : this.props.audioControl(song)\n            }}\n            className='play-song'\n          >\n            <i className={`fa ${buttonClass} play-btn`} aria-hidden='true' />\n          </div>\n\n          {this.props.viewType !== 'songs' &&\n            <p\n              className='add-song'\n              onClick={() => {\n                this.props.addSongToLibrary(this.props.token, song.track.id)\n              }}\n            >\n              {this.props.songAddedId === song.track.id\n                ? <i className='fa fa-check add-song' aria-hidden='true' />\n                : <i className='fa fa-plus add-song' aria-hidden='true' />}\n            </p>}\n\n          {this.props.viewType == 'songs' &&\n            <p className='add-song'>\n              <i className='fa fa-check' aria-hidden='true' />\n            </p>}\n\n          <div className='song-title'>\n            <p>{song.track.name}</p>\n          </div>\n\n          <div className='song-artist'>\n            <p>{song.track.artists[0].name}</p>\n          </div>\n\n          <div className='song-album'>\n            <p>{song.track.album.name}</p>\n          </div>\n\n          <div className='song-added'>\n            <p>{moment(song.added_at).format('YYYY-MM-DD')}</p>\n          </div>\n\n          <div className='song-length'>\n            <p>{this.msToMinutesAndSeconds(song.track.duration_ms)}</p>\n          </div>\n        </li>\n      )\n    })\n  }\n\n  render () {\n    return (\n      <div>\n        <div className='song-header-container'>\n          <div className='song-title-header'>\n            <p>Title</p>\n          </div>\n          <div className='song-artist-header'>\n            <p>Artist</p>\n          </div>\n          <div className='song-album-header'>\n            <p>Album</p>\n          </div>\n          <div className='song-added-header'>\n            <i className='fa fa-calendar-plus-o' aria-hidden='true' />\n          </div>\n          <div className='song-length-header'>\n            <p><i className='fa fa-clock-o' aria-hidden='true' /></p>\n          </div>\n        </div>\n        {this.props.songs &&\n          !this.props.fetchSongsPending &&\n          !this.props.fetchPlaylistSongsPending &&\n          this.renderSongs()}\n\n      </div>\n    )\n  }\n}\n\nexport default SongList\n","import SongList from './component'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { fetchSongs } from '../../actions/song'\nimport { addSongToLibrary } from '../../actions/user'\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token.token ? state.token.token : '',\n    songs: state.songs.songs ? state.songs.songs : '',\n    fetchSongsError: state.songs.fetchSongsError,\n    fetchSongsPending: state.songs.fetchSongsPending,\n    fetchPlaylistSongsPending: state.songs.fetchPlaylistSongsPending,\n    songPlaying: state.songs.songPlaying,\n    songPaused: state.songs.songPaused,\n    songId: state.songs.songId,\n    songAddedId: state.user.songId || '',\n    viewType: state.songs.viewType\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      fetchSongs,\n      addSongToLibrary\n    },\n    dispatch\n  )\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SongList)\n","import React from 'react'\n\nimport './index.css'\n\nconst AlbumList = ({ songs, audioControl }) => {\n  const renderAlbums = () => {\n    return songs.map((song, i) => {\n      return (\n        <li\n          onClick={() => {\n            audioControl(song)\n          }}\n          className='album-item'\n          key={i}\n        >\n          <div>\n            <div className='album-image'>\n              <img src={song.track.album.images[0].url} alt='thumbnail' />\n              <div className='play-song'>\n                <i\n                  className='fa fa-play-circle-o play-btn'\n                  aria-hidden='true'\n                />\n              </div>\n            </div>\n\n            <div className='album-details'>\n              <p className='album-name'>{song.track.album.name}</p>\n              <p className='artist-name'>{song.track.album.artists[0].name}</p>\n            </div>\n          </div>\n        </li>\n      )\n    })\n  }\n\n  return <ul className='album-view-container'>{renderAlbums()}</ul>\n}\n\nexport default AlbumList\n","import AlbumList from './component'\nimport { connect } from 'react-redux'\nimport uniqBy from 'lodash/uniqBy'\n\nconst mapStateToProps = state => {\n  const albumSongs = state.songs.songs\n    ? uniqBy(state.songs.songs, item => {\n      return item.track.album.name\n    })\n    : ''\n\n  return {\n    songs: albumSongs\n  }\n}\n\nexport default connect(mapStateToProps)(AlbumList)\n","import React from 'react'\nimport './index.css'\n\nconst ArtistList = ({\n  artists,\n  fetchArtistSongs,\n  token,\n  updateHeaderTitle\n}) => {\n  const renderArtists = () => {\n    return artists.map((artist, i) => {\n      const artistSongsAction = (artist, token) => {\n        fetchArtistSongs(artist.id, token)\n        updateHeaderTitle(artist.name)\n      }\n\n      return (\n        <li\n          onClick={() => {\n            artistSongsAction(artist, token)\n          }}\n          className='artist-item'\n          key={i}\n        >\n          <div>\n            <div className='artist-image'>\n              <img src={artist.images[0] ? artist.images[0].url : ''} />\n            </div>\n            <div className='artist-details'>\n              <p>{artist.name}</p>\n            </div>\n          </div>\n        </li>\n      )\n    })\n  }\n\n  return (\n    <ul className='artist-view-container'>\n      {artists && renderArtists()}\n    </ul>\n  )\n}\n\nexport default ArtistList\n","import AlbumList from './component'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { fetchArtistSongs } from '../../actions/artist'\nimport { updateHeaderTitle } from '../../actions/ui'\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token.token ? state.token.token : '',\n    artists: state.artists.artistList ? state.artists.artistList.artists : ''\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      fetchArtistSongs,\n      updateHeaderTitle\n    },\n    dispatch\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AlbumList)\n","import React from 'react'\n\nimport SongList from '../songslist'\nimport AlbumList from '../albums'\nimport ArtistList from '../artists'\nimport BrowseView from '../view'\nimport './index.css'\n\nconst MainView = ({ headerTitle, audioControl, resumeSong, pauseSong }) => {\n  return (\n    <div>\n      {headerTitle === 'Albums'\n        ? <AlbumList audioControl={audioControl} />\n        : headerTitle === 'Artists'\n            ? <ArtistList />\n            : headerTitle === 'Browse'\n                ? <BrowseView />\n                : // anything else show SongList\n                <SongList\n                  resumeSong={resumeSong}\n                  pauseSong={pauseSong}\n                  audioControl={audioControl}\n                  />}\n    </div>\n  )\n}\n\nexport default MainView\n","import MainView from './component'\nimport { connect } from 'react-redux'\n\nconst mapStateToProps = state => {\n  return {\n    headerTitle: state.ui.title\n  }\n}\n\nexport default connect(mapStateToProps)(MainView)\n","import React from 'react'\n\nimport './index.css'\n\nconst MainHeader = ({\n  pauseSong,\n  resumeSong,\n  fetchCategories,\n  fetchNewReleases,\n  fetchFeatured,\n  updateHeaderTitle,\n  updateViewType,\n  songPaused,\n  headerTitle,\n  viewType,\n  playlists,\n  token,\n  artists\n}) => {\n  let currentPlaylist\n  let currentArtist\n\n  if (viewType === 'playlist') {\n    currentPlaylist = playlists.filter(playlist => {\n      return playlist.name === headerTitle\n    })[0]\n  }\n\n  if (viewType === 'Artist' && artists.length > 0) {\n    currentArtist = artists.filter(artist => {\n      return artist.name === headerTitle\n    })[0]\n  }\n\n  return (\n    <div className='section-title'>\n      {viewType === 'playlist' &&\n        <div className='playlist-title-container'>\n          <div className='playlist-image-container'>\n            <img\n              className='playlist-image'\n              src={\n                currentPlaylist.images[0] ? currentPlaylist.images[0].url : null\n              }\n            />\n          </div>\n          <div className='playlist-info-container'>\n            <p className='playlist-text'>PLAYLIST</p>\n            <h3 className='header-title'>{headerTitle}</h3>\n            <p className='created-by'>\n              Created By:\n              {' '}\n              <span className='lighter-text'>\n                {currentPlaylist.owner.display_name}\n              </span>\n              {' '}\n              -\n              {' '}\n              {currentPlaylist.tracks.total}\n              {' '}\n              songs\n            </p>\n            <button\n              onClick={!songPaused ? pauseSong : resumeSong}\n              className='main-pause-play-btn'\n            >\n              {songPaused ? 'PLAY' : 'PAUSE'}\n            </button>\n\n          </div>\n        </div>}\n\n      {viewType === 'Artist' &&\n        currentArtist &&\n        <div>\n          <div className='current-artist-header-container'>\n            <img\n              className='current-artist-image'\n              src={currentArtist.images[0].url}\n            />\n            <div className='current-artist-info'>\n              <p>Artist from your library</p>\n              <h3>{currentArtist.name}</h3>\n            </div>\n          </div>\n          <button\n            onClick={!songPaused ? pauseSong : resumeSong}\n            className='main-pause-play-btn artist-button'\n          >\n            {songPaused ? 'PLAY' : 'PAUSE'}\n          </button>\n        </div>}\n\n      {(headerTitle === 'Songs' ||\n        headerTitle === 'Recently Played' ||\n        headerTitle === 'Albums' ||\n        headerTitle === 'Artists') &&\n        <div>\n          <h3 className='header-title'>{headerTitle}</h3>\n          {headerTitle !== 'Artists' &&\n            <button\n              onClick={!songPaused ? pauseSong : resumeSong}\n              className='main-pause-play-btn'\n            >\n              {songPaused ? 'PLAY' : 'PAUSE'}\n            </button>}\n\n        </div>}\n      {headerTitle === 'Browse' &&\n        <div>\n          <h3 className='header-title'>{headerTitle}</h3>\n          <div className='browse-headers'>\n            <p\n              className={viewType === 'Genres' ? 'active' : ''}\n              onClick={() => {\n                fetchCategories(token)\n                updateViewType('Genres')\n                updateHeaderTitle('Browse')\n              }}\n            >\n              Genres\n            </p>\n            <p\n              className={viewType === 'New Releases' ? 'active' : ''}\n              onClick={() => {\n                fetchNewReleases(token)\n                updateViewType('New Releases')\n                updateHeaderTitle('Browse')\n              }}\n            >\n              New Releases\n            </p>\n            <p\n              className={viewType === 'Featured' ? 'active' : ''}\n              onClick={() => {\n                fetchFeatured(token)\n                updateViewType('Featured')\n                updateHeaderTitle('Browse')\n              }}\n            >\n              Featured\n            </p>\n          </div>\n        </div>}\n    </div>\n  )\n}\n\nexport default MainHeader\n","export const fetchCategoriesSuccess = (categories) => {\n  return {\n    type: 'FETCH_CATEGORIES_SUCCESS',\n    categories\n  };\n};\n\nexport const fetchCategoriesError = () => {\n  return {\n    type: 'FETCH_CATEGORIES_ERROR'\n  };\n};\n\nexport const fetchCategories = (accessToken) => {\n  return dispatch => {\n    const request = new Request(`https://api.spotify.com/v1/browse/categories`, {\n      headers: new Headers({\n        'Authorization': 'Bearer ' + accessToken\n      })\n    });\n    fetch(request).then(res => {\n      return res.json();\n    }).then(res => {\n      dispatch(fetchCategoriesSuccess(res.categories));\n    }).catch(err => {\n      dispatch(fetchCategoriesError(err));\n    });\n  };\n};\n\nexport const fetchNewReleasesSuccess = (newReleases) => {\n  return {\n    type: 'FETCH_NEW_RELEASES_SUCCESS',\n    newReleases\n  };\n};\n\nexport const fetchNewReleasesError = () => {\n  return {\n    type: 'FETCH_NEW_RELEASES_ERROR'\n  };\n};\n\nexport const fetchNewReleases = (accessToken) => {\n  return dispatch => {\n    const request = new Request(`https://api.spotify.com/v1/browse/new-releases`, {\n      headers: new Headers({\n        'Authorization': 'Bearer ' + accessToken\n      })\n    });\n    fetch(request).then(res => {\n      return res.json();\n    }).then(res => {\n      dispatch(fetchNewReleasesSuccess(res.albums));\n    }).catch(err => {\n      dispatch(fetchNewReleasesError(err));\n    });\n  };\n};\n\nexport const fetchFeaturedSuccess = (featured) => {\n  return {\n    type: 'FETCH_FEATURED_SUCCESS',\n    featured\n  };\n};\n\nexport const fetchFeaturedError = () => {\n  return {\n    type: 'FETCH_FEATURED_ERROR'\n  };\n};\n\nexport const fetchFeatured = (accessToken) => {\n  return dispatch => {\n    const request = new Request(`https://api.spotify.com/v1/browse/featured-playlists`, {\n      headers: new Headers({\n        'Authorization': 'Bearer ' + accessToken\n      })\n    });\n    fetch(request).then(res => {\n      return res.json();\n    }).then(res => {\n      dispatch(fetchFeaturedSuccess(res.playlists));\n    }).catch(err => {\n      dispatch(fetchFeaturedError(err));\n    });\n  };\n};\n","import { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n\nimport MainHeader from './component'\nimport {\n  fetchCategories,\n  fetchNewReleases,\n  fetchFeatured\n} from '../../actions/browse'\nimport { updateHeaderTitle } from '../../actions/ui'\nimport { updateViewType } from '../../actions/song'\n\nconst mapStateToProps = state => {\n  return {\n    songPaused: state.songs.songPaused,\n    headerTitle: state.ui.title,\n    viewType: state.songs.viewType,\n    playlists: state.playlist.playlists,\n    artists: state.artists.artistList ? state.artists.artistList.artists : [],\n    token: state.token.token\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      fetchCategories,\n      fetchNewReleases,\n      updateHeaderTitle,\n      updateViewType,\n      fetchFeatured\n    },\n    dispatch\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainHeader)\n","import React from 'react'\n\nimport './index.css'\n\nconst SideMenu = ({\n  updateHeaderTitle,\n  updateViewType,\n  fetchFeatured,\n  fetchRecentlyPlayed,\n  fetchSongs,\n  fetchAlbums,\n  fetchArtists,\n  token,\n  title,\n  artistIds\n}) => {\n  const handleClick = name => {\n    updateHeaderTitle(name)\n    updateViewType(name)\n  }\n\n  const handleBrowseClick = () => {\n    updateHeaderTitle('Browse')\n    updateViewType('Featured')\n    fetchFeatured(token)\n  }\n\n  const renderSideMenu = () => {\n    const menu = [\n      {\n        name: 'Recently Played',\n        action: fetchRecentlyPlayed\n      },\n      {\n        name: 'Songs',\n        action: fetchSongs\n      },\n      {\n        name: 'Albums',\n        action: fetchAlbums\n      },\n      {\n        name: 'Artists',\n        action: fetchArtists,\n        getArtists: true\n      }\n    ]\n\n    return menu.map(item => {\n      return (\n        <li\n          key={item.name}\n          className={\n            title === item.name ? 'active side-menu-item' : 'side-menu-item'\n          }\n          onClick={() => {\n            item.getArtists ? item.action(token, artistIds) : item.action(token)\n            handleClick(item.name)\n          }}\n        >\n          {item.name}\n        </li>\n      )\n    })\n  }\n\n  return (\n    <ul className='side-menu-container'>\n      <li\n        onClick={handleBrowseClick}\n        className={\n          title === 'Browse' ? 'active side-menu-item' : 'side-menu-item'\n        }\n      >\n        Browse\n      </li>\n      <li className='side-menu-item radio'>Radio</li>\n      <h3 className='user-library-header'>Your Library</h3>\n      {renderSideMenu()}\n    </ul>\n  )\n}\n\nexport default SideMenu\n","export const fetchAlbumsPending = () => {\n\treturn {\n\t\ttype: 'FETCH_ALBUMS_PENDING'\n\t};\n};\n\nexport const fetchAlbumsSuccess = (albums) => {\n\treturn {\n\t\ttype: 'FETCH_ALBUMS_SUCCESS',\n\t\talbums\n\t};\n};\n\nexport const fetchAlbumsError = () => {\n\treturn {\n\t\ttype: 'FETCH_ALBUMS_ERROR'\n\t};\n};\n\nexport const fetchAlbums = (accessToken) => {\n\treturn dispatch => {\n\t\tconst request = new Request(`https://api.spotify.com/v1/me/albums`, {\n\t\t\theaders: new Headers({\n\t\t\t\t'Authorization': 'Bearer ' + accessToken\n\t\t\t})\n\t\t});\n\n\t\tdispatch(fetchAlbumsPending());\n\n\t\tfetch(request).then(res => {\n\t\t\treturn res.json();\n\t\t}).then(res => {\n\t\t\tdispatch(fetchAlbumsSuccess(res.items));\n\t\t}).catch(err => {\n\t\t\tdispatch(fetchAlbumsError(err));\n\t\t});\n\t};\n};\n","import SideMenu from './component'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport {\n  fetchSongs,\n  fetchRecentlyPlayed,\n  updateViewType\n} from '../../actions/song'\nimport { fetchAlbums } from '../../actions/album'\nimport { fetchArtists } from '../../actions/artist'\nimport { fetchFeatured } from '../../actions/browse'\nimport { updateHeaderTitle } from '../../actions/ui'\n\nconst mapStateToProps = state => {\n  return {\n    userId: state.user.user ? state.user.user.id : '',\n    token: state.token.token ? state.token.token : '',\n    artistIds: state.artists.artistIds,\n    title: state.ui.title\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      fetchRecentlyPlayed,\n      fetchSongs,\n      fetchAlbums,\n      fetchArtists,\n      fetchFeatured,\n      updateViewType,\n      updateHeaderTitle\n    },\n    dispatch\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideMenu)\n","import React, { Component } from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { fetchUser } from './actions/user'\n\nimport {\n  playSong,\n  stopSong,\n  pauseSong,\n  fetchSongs,\n  resumeSong\n} from './actions/song'\nimport './App.css'\n\nimport Header from './components/common/header'\nimport Footer from './components/common/footer'\nimport UserPlaylists from './components/playlists'\nimport MainView from './components/view'\nimport MainHeader from './components/header'\nimport SideMenu from './components/sidebar'\n\nclass App extends Component {\n  static audio\n\n  componentDidMount () {\n    this.props.fetchUser(this.props.token)\n    this.props.fetchSongs()\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (this.audio !== undefined) {\n      this.audio.volume = nextProps.volume / 100\n    }\n  }\n\n  stopSong = () => {\n    if (this.audio) {\n      this.props.stopSong()\n      this.audio.pause()\n    }\n  }\n\n  pauseSong = () => {\n    if (this.audio) {\n      this.props.pauseSong()\n      this.audio.pause()\n    }\n  }\n\n  resumeSong = () => {\n    if (this.audio) {\n      this.props.resumeSong()\n      this.audio.play()\n    }\n  }\n\n  audioControl = song => {\n    const { playSong, stopSong } = this.props\n\n    if (this.audio === undefined) {\n      playSong(song.track)\n      this.audio = new Audio(song.track.preview_url)\n      this.audio.play()\n    } else {\n      stopSong()\n      this.audio.pause()\n      playSong(song.track)\n      this.audio = new Audio(song.track.preview_url)\n      this.audio.play()\n    }\n  }\n\n  render () {\n    return (\n      <div className='App'>\n        <div className='app-container'>\n          <div className='left-side-section'>\n            <SideMenu />\n            <UserPlaylists />\n          </div>\n\n          <div className='main-section'>\n            <Header />\n            <div className='main-section-container'>\n              <MainHeader\n                pauseSong={this.pauseSong}\n                resumeSong={this.resumeSong}\n              />\n              <MainView\n                pauseSong={this.pauseSong}\n                resumeSong={this.resumeSong}\n                audioControl={this.audioControl}\n              />\n            </div>\n          </div>\n\n          <Footer\n            stopSong={this.stopSong}\n            pauseSong={this.pauseSong}\n            resumeSong={this.resumeSong}\n            audioControl={this.audioControl}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token.token,\n    volume: state.sound.volume\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      fetchUser,\n      playSong,\n      stopSong,\n      pauseSong,\n      resumeSong,\n      fetchSongs\n    },\n    dispatch\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","export const setToken = (token) => {\n  return {\n    type: 'SET_TOKEN',\n    token\n  };\n};\n","import React from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { Route } from 'react-router-dom'\n\nimport { setToken } from './actions/token'\n\nfunction login () {\n  return 'https://accounts.spotify.com/authorize?client_id=a5df0354e4004683bbd1b4ceab1b8974&scope=playlist-read-private%20playlist-read-collaborative%20playlist-modify-public%20user-read-recently-played%20playlist-modify-private%20ugc-image-upload%20user-follow-modify%20user-follow-read%20user-library-read%20user-library-modify%20user-read-private%20user-read-email%20user-top-read%20user-read-playback-state&response_type=token&redirect_uri=http://localhost:3000/'\n}\n\nclass AuthenticatedRoute extends React.PureComponent {\n  state = {\n    isAuthenticated: null\n  }\n\n  componentDidMount () {\n    let params = {}\n    let e,\n      reg = /([^&;=]+)=?([^&;]*)/g,\n      token = window.location.hash.substring(1)\n    while ((e = reg.exec(token))) {\n      params[e[1]] = decodeURIComponent(e[2])\n    }\n\n    if (!params.access_token) {\n      window.location.href = login()\n      this.setState({ isAuthenticated: false })\n    } else {\n      this.setState({ isAuthenticated: true })\n      this.props.setToken(params.access_token)\n    }\n  }\n\n  render () {\n    const { component: C, props: cProps, ...rest } = this.props\n    const { isAuthenticated } = this.state\n\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          (isAuthenticated ? <C {...props} {...cProps} /> : false)}\n      />\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      setToken\n    },\n    dispatch\n  )\n}\n\nexport default connect(null, mapDispatchToProps)(AuthenticatedRoute)\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter, Switch } from 'react-router-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\n\nimport reducers from './reducers'\nimport App from './App'\nimport AuthenticatedRoute from './AuthRoute'\n\nimport * as serviceWorker from './serviceWorker'\n\nclass Index extends Component {\n  render () {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <AuthenticatedRoute path={'/'} exact component={App} />\n        </Switch>\n      </BrowserRouter>\n    )\n  }\n}\n\nconst store = createStore(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  applyMiddleware(thunk)\n)\n\nwindow.store = store\n\nReactDOM.render(\n  <Provider store={store}>\n    <Index />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}